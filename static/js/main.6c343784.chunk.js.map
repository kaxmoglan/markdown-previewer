{"version":3,"sources":["components/editor.js","components/preview.js","App.js","index.js"],"names":["Editor","props","className","editMaximise","onClick","setEditMaximise","onChange","e","setInputText","target","value","name","id","inputText","Preview","marked","setOptions","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","markdown","previewMaximise","setPreviewMaximise","dangerouslySetInnerHTML","__html","App","useState","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMA6BeA,G,MA3BA,SAACC,GAUd,OACE,yBAAKC,UAAS,wCAAmCD,EAAME,eACrD,yBAAKD,UAAU,aACb,uBAAGA,UAAU,gBACb,qCACA,uBAAGA,UAAU,oBAAoBE,QATrB,WAChBH,EAAMI,iBAAiBJ,EAAME,kBAU3B,8BACEG,SAhBc,SAACC,GACnBN,EAAMO,aAAaD,EAAEE,OAAOC,QAgBxBC,KAAK,SACLC,GAAG,SACHF,MAAOT,EAAMY,e,gBCSNC,EA7BC,SAACb,GACfc,IAAOC,WAAW,CAChBC,UAAU,EACVC,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,OAAO,IAGT,IAAMC,EAAWT,IAAOd,EAAMY,WAM9B,OACE,yBAAKX,UAAS,yCAAoCD,EAAMwB,kBACtD,yBAAKvB,UAAU,aACb,uBAAGA,UAAU,gBACb,sCACA,uBAAGE,QATS,WAChBH,EAAMyB,oBAAoBzB,EAAMwB,kBAQLvB,UAAU,uBAEnC,yBAAKU,GAAG,UAAUe,wBAAyB,CAAEC,OAAQJ,OCM5CK,MA1Bf,WAAe,MAEqBC,mBAASC,GAF9B,mBAENlB,EAFM,KAEKL,EAFL,OAG2BsB,oBAAS,GAHpC,mBAGN3B,EAHM,KAGQE,EAHR,OAIiCyB,oBAAS,GAJ1C,mBAINL,EAJM,KAIWC,EAJX,KAMb,OACE,oCACE,wBAAId,GAAG,SACL,uBAAGV,UAAU,gBADf,uBAGA,kBAAC,EAAD,CACEW,UAAWA,EACXL,aAAcA,EACdL,aAAcA,EACdE,gBAAiBA,IAEnB,kBAAC,EAAD,CACEQ,UAAWA,EACXY,gBAAiBA,EACjBC,mBAAoBA,MAQtBK,EAAW,8qCC/BjBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6c343784.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Editor = (props) => {\n  // HANDLERS\n  const handleInput = (e) => {\n    props.setInputText(e.target.value);\n  };\n\n  const handleMax = () => {\n    props.setEditMaximise(!props.editMaximise);\n  };\n\n  return (\n    <div className={`editor-section windowMaximise_${props.editMaximise}`}>\n      <div className=\"title-bar\">\n        <i className=\"fas fa-code\"></i>\n        <p>Editor</p>\n        <i className=\"fas fa-arrows-alt\" onClick={handleMax}></i>\n      </div>\n      <textarea\n        onChange={handleInput}\n        name=\"editor\"\n        id=\"editor\"\n        value={props.inputText}\n      ></textarea>\n    </div>\n  );\n};\n\nexport default Editor;\n","import React from \"react\";\nimport marked from \"marked\";\n\nconst Preview = (props) => {\n  marked.setOptions({\n    pedantic: false,\n    gfm: true,\n    breaks: true,\n    sanitize: true,\n    smartLists: true,\n    smartypants: false,\n    xhtml: false,\n  });\n\n  const markdown = marked(props.inputText);\n\n  const handleMax = () => {\n    props.setPreviewMaximise(!props.previewMaximise);\n  };\n\n  return (\n    <div className={`preview-section windowMaximise_${props.previewMaximise}`}>\n      <div className=\"title-bar\">\n        <i className=\"fas fa-code\"></i>\n        <p>Preview</p>\n        <i onClick={handleMax} className=\"fas fa-arrows-alt\"></i>\n      </div>\n      <div id=\"preview\" dangerouslySetInnerHTML={{ __html: markdown }} />\n    </div>\n  );\n};\n\nexport default Preview;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\n// Components\nimport Editor from \"./components/editor\";\nimport Preview from \"./components/preview\";\n\nfunction App() {\n  // STATES\n  const [inputText, setInputText] = useState(placeholder);\n  const [editMaximise, setEditMaximise] = useState(false);\n  const [previewMaximise, setPreviewMaximise] = useState(false);\n\n  return (\n    <>\n      <h1 id=\"title\">\n        <i className=\"fas fa-code\"></i> Markdown Previewer\n      </h1>\n      <Editor\n        inputText={inputText}\n        setInputText={setInputText}\n        editMaximise={editMaximise}\n        setEditMaximise={setEditMaximise}\n      />\n      <Preview\n        inputText={inputText}\n        previewMaximise={previewMaximise}\n        setPreviewMaximise={setPreviewMaximise}\n      />\n    </>\n  );\n}\n\nexport default App;\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}