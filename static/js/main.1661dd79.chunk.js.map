{"version":3,"sources":["components/editor.js","components/preview.js","App.js","index.js"],"names":["Editor","props","className","editMaximise","splitView","onClick","handleSplitView","setEditMaximise","setSplitView","onChange","e","setInputText","target","value","name","id","inputText","Preview","marked","setOptions","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","markdown","previewMaximise","setPreviewMaximise","dangerouslySetInnerHTML","__html","App","useState","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAmCeA,G,MAjCA,SAACC,GAWd,OACE,yBACEC,UAAS,wCAAmCD,EAAME,aAAzC,sBAAmEF,EAAMG,YAElF,yBAAKF,UAAU,aACb,uBAAGA,UAAU,gBACb,qCACA,yBAAKA,UAAU,WACb,uBAAGA,UAAU,iBAAiBG,QAASJ,EAAMK,kBAC7C,uBAAGJ,UAAU,oBAAoBG,QAdvB,WAChBJ,EAAMM,iBAAiBN,EAAME,cAC7BF,EAAMO,cAAa,QAejB,8BACEC,SAtBc,SAACC,GACnBT,EAAMU,aAAaD,EAAEE,OAAOC,QAsBxBC,KAAK,SACLC,GAAG,SACHF,MAAOZ,EAAMe,e,gBCSNC,EAnCC,SAAChB,GACfiB,IAAOC,WAAW,CAChBC,UAAU,EACVC,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,OAAO,IAGT,IAAMC,EAAWT,IAAOjB,EAAMe,WAO9B,OACE,yBACEd,UAAS,yCAAoCD,EAAM2B,gBAA1C,sBAAuE3B,EAAMG,YAEtF,yBAAKF,UAAU,aACb,uBAAGA,UAAU,gBACb,sCACA,yBAAKA,UAAU,WACb,uBAAGG,QAASJ,EAAMK,gBAAiBJ,UAAU,mBAC7C,uBAAGG,QAdO,WAChBJ,EAAM4B,oBAAoB5B,EAAM2B,iBAChC3B,EAAMO,cAAa,IAYUN,UAAU,wBAGrC,yBAAKa,GAAG,UAAUe,wBAAyB,CAAEC,OAAQJ,OCc5CK,MAxCf,WAAe,MAEqBC,mBAASC,GAF9B,mBAENlB,EAFM,KAEKL,EAFL,OAG2BsB,oBAAS,GAHpC,mBAGN9B,EAHM,KAGQI,EAHR,OAIiC0B,oBAAS,GAJ1C,mBAINL,EAJM,KAIWC,EAJX,OAKqBI,oBAAS,GAL9B,mBAKN7B,EALM,KAKKI,EALL,KAQPF,EAAkB,WACtBC,GAAgB,GAChBsB,GAAmB,GACnBrB,GAAcJ,IAGhB,OACE,oCACE,wBAAIW,GAAG,SACL,uBAAGb,UAAU,gBADf,uBAGA,kBAAC,EAAD,CACEc,UAAWA,EACXL,aAAcA,EACdR,aAAcA,EACdI,gBAAiBA,EACjBH,UAAWA,EACXI,aAAcA,EACdF,gBAAiBA,IAEnB,kBAAC,EAAD,CACEU,UAAWA,EACXY,gBAAiBA,EACjBC,mBAAoBA,EACpBzB,UAAWA,EACXI,aAAcA,EACdF,gBAAiBA,MAQnB4B,EAAW,8qCC7CjBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.1661dd79.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Editor = (props) => {\n  // HANDLERS\n  const handleInput = (e) => {\n    props.setInputText(e.target.value);\n  };\n\n  const handleMax = () => {\n    props.setEditMaximise(!props.editMaximise);\n    props.setSplitView(false);\n  };\n\n  return (\n    <div\n      className={`editor-section windowMaximise_${props.editMaximise} splitview_${props.splitView}`}\n    >\n      <div className=\"title-bar\">\n        <i className=\"fas fa-code\"></i>\n        <p>Editor</p>\n        <div className=\"buttons\">\n          <i className=\"fas fa-columns\" onClick={props.handleSplitView}></i>\n          <i className=\"fas fa-arrows-alt\" onClick={handleMax}></i>\n        </div>\n      </div>\n      <textarea\n        onChange={handleInput}\n        name=\"editor\"\n        id=\"editor\"\n        value={props.inputText}\n      ></textarea>\n    </div>\n  );\n};\n\nexport default Editor;\n","import React from \"react\";\nimport marked from \"marked\";\n\nconst Preview = (props) => {\n  marked.setOptions({\n    pedantic: false,\n    gfm: true,\n    breaks: true,\n    sanitize: true,\n    smartLists: true,\n    smartypants: false,\n    xhtml: false,\n  });\n\n  const markdown = marked(props.inputText);\n\n  const handleMax = () => {\n    props.setPreviewMaximise(!props.previewMaximise);\n    props.setSplitView(false);\n  };\n\n  return (\n    <div\n      className={`preview-section windowMaximise_${props.previewMaximise} splitview_${props.splitView}`}\n    >\n      <div className=\"title-bar\">\n        <i className=\"fas fa-code\"></i>\n        <p>Preview</p>\n        <div className=\"buttons\">\n          <i onClick={props.handleSplitView} className=\"fas fa-columns\"></i>\n          <i onClick={handleMax} className=\"fas fa-arrows-alt\"></i>\n        </div>\n      </div>\n      <div id=\"preview\" dangerouslySetInnerHTML={{ __html: markdown }} />\n    </div>\n  );\n};\n\nexport default Preview;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\n// Components\nimport Editor from \"./components/editor\";\nimport Preview from \"./components/preview\";\n\nfunction App() {\n  // STATES\n  const [inputText, setInputText] = useState(placeholder);\n  const [editMaximise, setEditMaximise] = useState(false);\n  const [previewMaximise, setPreviewMaximise] = useState(false);\n  const [splitView, setSplitView] = useState(false);\n\n  // HANDLE SPLIT VIEW\n  const handleSplitView = () => {\n    setEditMaximise(false);\n    setPreviewMaximise(false);\n    setSplitView(!splitView);\n  };\n\n  return (\n    <>\n      <h1 id=\"title\">\n        <i className=\"fas fa-code\"></i> Markdown Previewer\n      </h1>\n      <Editor\n        inputText={inputText}\n        setInputText={setInputText}\n        editMaximise={editMaximise}\n        setEditMaximise={setEditMaximise}\n        splitView={splitView}\n        setSplitView={setSplitView}\n        handleSplitView={handleSplitView}\n      />\n      <Preview\n        inputText={inputText}\n        previewMaximise={previewMaximise}\n        setPreviewMaximise={setPreviewMaximise}\n        splitView={splitView}\n        setSplitView={setSplitView}\n        handleSplitView={handleSplitView}\n      />\n    </>\n  );\n}\n\nexport default App;\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}